{"version":3,"file":"ngx-datatable-bootstrap4.js.map","sources":["ng://ngx-datatable-bootstrap4/components/column/column.directive.ts","ng://ngx-datatable-bootstrap4/components/pagination/pagination.component.ts","ng://ngx-datatable-bootstrap4/components/row/row.component.ts","ng://ngx-datatable-bootstrap4/utils/drag.ts","ng://ngx-datatable-bootstrap4/components/types.ts","ng://ngx-datatable-bootstrap4/components/table/table.component.ts","ng://ngx-datatable-bootstrap4/components/title/title.component.ts","ng://ngx-datatable-bootstrap4/components/title/title.directive.ts","ng://ngx-datatable-bootstrap4/utils/hide.directive.ts","ng://ngx-datatable-bootstrap4/utils/min.pipe.ts","ng://ngx-datatable-bootstrap4/utils/px.pipe.ts","ng://ngx-datatable-bootstrap4/tools/data-table-resource.ts","ng://ngx-datatable-bootstrap4/index.ts"],"sourcesContent":["import {ContentChild, Directive, Input, OnInit, TemplateRef} from '@angular/core';\nimport {DataTableRow} from '../../';\nimport {CellCallback} from '../types';\n\n@Directive({\n  selector: 'data-table-column'\n})\nexport class DataTableColumn<T> implements OnInit {\n\n  // for [ngClass]\n  styleClassObject = {};\n\n  // init:\n  @Input()\n  header: string;\n  @Input()\n  sortable = false;\n  @Input()\n  resizable = false;\n  @Input()\n  property: string;\n  @Input()\n  styleClass: string;\n  @Input()\n  cellColors: CellCallback<T>;\n  @Input()\n  width: number | string;\n  @Input()\n  visible = true;\n\n  @ContentChild('cellTemplate')\n  cellTemplate: TemplateRef<any>;\n  @ContentChild('headerTemplate')\n  headerTemplate: TemplateRef<any>;\n\n  getCellColor(row: DataTableRow<T>, index: number) {\n    if (this.cellColors !== undefined) {\n      return (<CellCallback<T>>this.cellColors)(row.item, row, this, index);\n    }\n  }\n\n  ngOnInit() {\n    this._initCellClass();\n  }\n\n  private _initCellClass() {\n    if (!this.styleClass && this.property) {\n      if (/^[a-zA-Z0-9_]+$/.test(this.property)) {\n        this.styleClass = 'column-' + this.property;\n      } else {\n        this.styleClass = 'column-' + this.property.replace(/[^a-zA-Z0-9_]/g, '');\n      }\n    }\n\n    if (this.styleClass != null) {\n      this.styleClassObject = {\n        [this.styleClass]: true\n      };\n    }\n  }\n}\n","import {Component, forwardRef, Inject} from '@angular/core';\nimport {DataTable} from '../../';\n\n\n@Component({\n  selector: 'data-table-pagination',\n  template: `<div class=\"navbar p-0 pagination-component\">\n  <div>\n    {{dataTable.translations.paginationRange}}:&nbsp;{{dataTable.offset < 0 ? 0 : dataTable.offset + 1}}&nbsp;-\n    {{[dataTable.offset + dataTable.limit , dataTable.itemCount] | min}}&nbsp;/&nbsp;{{dataTable.itemCount}}\n  </div>\n  <ul class=\"nav justify-content-end\">\n    <li class=\"nav-item pagination-limit\">\n      <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\">{{dataTable.translations.paginationLimit}}:</span>\n        </div>\n        <input #limitInput type=\"number\" class=\"form-control\" min=\"1\" step=\"1\"\n               [ngModel]=\"limit\" (blur)=\"limit = limitInput.value\"\n               (keyup.enter)=\"limit = limitInput.value\"\n               (keyup.esc)=\"limitInput.value = limit\"\n               (keypress)=\"keyPress($event)\"/>\n      </div>\n    </li>\n    <li class=\"nav-item\">\n      <button [disabled]=\"dataTable.offset <= 0\" (click)=\"pageFirst()\" class=\"btn btn-default\">&laquo;</button>\n      <button [disabled]=\"dataTable.offset <= 0\" (click)=\"pageBack()\" class=\"btn btn-default\">&lsaquo;</button>\n      <div class=\"d-inline-block\">\n        <div class=\"input-group\">\n          <input #pageInput type=\"number\" class=\"form-control\" min=\"1\" step=\"1\" max=\"{{maxPage}}\"\n                 [ngModel]=\"page\" (blur)=\"page = pageInput.value\"\n                 (keyup.enter)=\"page = pageInput.value\" (keyup.esc)=\"pageInput.value = page\"\n                 (keypress)=\"keyPress($event)\"/>\n          <div class=\"input-group-append\">\n            <span class=\"input-group-text\">/&nbsp;{{dataTable.lastPage}}</span>\n          </div>\n        </div>\n      </div>\n      <button [disabled]=\"(dataTable.offset + dataTable.limit) >= dataTable.itemCount\" (click)=\"pageForward()\"\n              class=\"btn btn-default\">&rsaquo;\n      </button>\n      <button [disabled]=\"(dataTable.offset + dataTable.limit) >= dataTable.itemCount\" (click)=\"pageLast()\"\n              class=\"btn btn-default\">&raquo;\n      </button>\n    </li>\n  </ul>\n</div>\n`,\n  styles: [`.pagination-component .pagination-limit{margin-right:1rem}.pagination-component .pagination-limit input{width:75px}.pagination-component .btn{margin-top:-3px}`]\n})\nexport class DataTablePagination<T> {\n\n  constructor(@Inject(forwardRef(() => DataTable)) public dataTable: DataTable<T>) {\n  }\n\n  get maxPage() {\n    return Math.ceil(this.dataTable.itemCount / this.dataTable.limit);\n  }\n\n  get limit() {\n    return this.dataTable.limit;\n  }\n\n  set limit(value) {\n    if (Number(value) > 0) {\n      this.dataTable.limit = Math.floor(+value);\n    }\n  }\n\n  get page() {\n    return this.dataTable.page;\n  }\n\n  set page(value) {\n    if (Number(value) > 0) {\n      this.dataTable.page = Math.floor(+value);\n    }\n  }\n\n  pageBack() {\n    this.dataTable.offset -= Math.min(this.dataTable.limit, this.dataTable.offset);\n  }\n\n  pageForward() {\n    this.dataTable.offset += this.dataTable.limit;\n  }\n\n  pageFirst() {\n    this.dataTable.offset = 0;\n  }\n\n  pageLast() {\n    this.dataTable.offset = (this.maxPage - 1) * this.dataTable.limit;\n  }\n\n  keyPress(event: any) {\n    let inputChar = String.fromCharCode(event.charCode);\n    if (!(Number(inputChar) >= 0)) {\n      event.preventDefault();\n    }\n  }\n}\n","import {Component, EventEmitter, forwardRef, Inject, Input, OnDestroy, Output} from '@angular/core';\nimport {DataTable} from '../../';\n\n\n@Component({\n  selector: '[dataTableRow]',\n  template: `<tr class=\"data-table-row\"\n    [title]=\"getTooltip()\"\n    [style.background-color]=\"dataTable.getRowColor(item, index, _this)\"\n    [class.row-odd]=\"index % 2 === 0\"\n    [class.row-even]=\"index % 2 === 1\"\n    [class.selected]=\"selected\"\n    [class.clickable]=\"dataTable.selectOnRowClick\"\n    (dblclick)=\"dataTable.rowDoubleClicked(_this, $event)\"\n    (click)=\"dataTable.rowClicked(_this, $event)\">\n  <td [hide]=\"!dataTable.expandColumnVisible\" class=\"row-expand-button\"\n      (click)=\"expanded = !expanded; $event.stopPropagation(); dataTable.rowExpanded(_this, $event)\">\n    <span class=\"fa fa-arrow-circle-o-right\" [hide]=\"expanded\"></span>\n    <span class=\"fa fa-arrow-circle-o-down\" [hide]=\"!expanded\"></span>\n  </td>\n  <td [hide]=\"!dataTable.indexColumnVisible\" class=\"index-column\" [textContent]=\"displayIndex\"></td>\n  <td [hide]=\"!dataTable.selectColumnVisible\" class=\"select-column\">\n    <input type=\"checkbox\" [(ngModel)]=\"selected\"/>\n  </td>\n  <td *ngFor=\"let column of dataTable.columns\" [hide]=\"!column.visible\" [ngClass]=\"column.styleClassObject\"\n      class=\"data-column\"\n      [style.background-color]=\"column.getCellColor(_this, index)\"\n      (click)=\"dataTable.cellClicked(column, _this, $event)\">\n    <div *ngIf=\"!column.cellTemplate\" [textContent]=\"item[column.property]\"></div>\n    <ng-container *ngIf=\"column.cellTemplate\" [ngTemplateOutlet]=\"column.cellTemplate\"\n         [ngTemplateOutletContext]=\"{column: column, row: _this, item: item}\"></ng-container>\n  </td>\n</tr>\n<tr *ngIf=\"dataTable.expandableRows\" [hide]=\"!expanded\" class=\"row-expansion\">\n  <td [attr.colspan]=\"dataTable.columnCount\">\n    <ng-container [ngTemplateOutlet]=\"dataTable.expandTemplate\"\n                  [ngTemplateOutletContext]=\"{row: _this, item: item}\"></ng-container>\n  </td>\n</tr>\n`,\n  styles: [`.select-column{text-align:center}.row-expand-button{cursor:pointer;text-align:center}.clickable{cursor:pointer}`]\n})\nexport class DataTableRow<T> implements OnDestroy {\n\n  // row selection:\n  private _selected: boolean;\n  expanded: boolean;\n\n  @Input()\n  item: T;\n  @Input()\n  index: number;\n\n  @Output()\n  selectedChange = new EventEmitter();\n\n  // FIXME is there no template keyword for this in angular 2?\n  public _this = this;\n\n  constructor(@Inject(forwardRef(() => DataTable)) public dataTable: DataTable<T>) {\n  }\n\n  get selected() {\n    return this._selected;\n  }\n\n  set selected(selected) {\n    this._selected = selected;\n    this.selectedChange.emit(selected);\n  }\n\n  // other:\n  get displayIndex() {\n    if (this.dataTable.pagination) {\n      return this.dataTable.displayParams.offset + this.index + 1;\n    } else {\n      return this.index + 1;\n    }\n  }\n\n  getTooltip() {\n    if (this.dataTable.rowTooltip) {\n      return this.dataTable.rowTooltip(this.item, this, this.index);\n    }\n    return '';\n  }\n\n  ngOnDestroy() {\n    this.selected = false;\n  }\n}\n","export type MoveHandler = (event: MouseEvent, dx: number, dy: number, x: number, y: number) => void;\nexport type UpHandler = (event: MouseEvent, x: number, y: number, moved: boolean) => void;\n\nexport function drag(event: MouseEvent, {move, up}: { move: MoveHandler, up?: UpHandler }) {\n\n  let startX = event.pageX;\n  let startY = event.pageY;\n  let x = startX;\n  let y = startY;\n  let moved = false;\n\n  function mouseMoveHandler(e: MouseEvent) {\n    let dx = e.pageX - x;\n    let dy = e.pageY - y;\n    x = e.pageX;\n    y = e.pageY;\n    if (dx || dy) {\n      moved = true;\n    }\n\n    move(e, dx, dy, x, y);\n\n    e.preventDefault(); // to avoid text selection\n  }\n\n  function mouseUpHandler(e: MouseEvent) {\n    x = e.pageX;\n    y = e.pageY;\n\n    document.removeEventListener('mousemove', mouseMoveHandler);\n    document.removeEventListener('mouseup', mouseUpHandler);\n\n    if (up) {\n      up(e, x, y, moved);\n    }\n  }\n\n  document.addEventListener('mousemove', mouseMoveHandler);\n  document.addEventListener('mouseup', mouseUpHandler);\n}\n","import {DataTableColumn} from './column/column.directive';\nimport {DataTableRow} from './row/row.component';\n\nexport type RowCallback<T> = (item: any, row: DataTableRow<T>, index: number) => string;\nexport type CellCallback<T> = (item: any, row: DataTableRow<T>, column: DataTableColumn<T>, index: number) => string;\n\nexport interface DataTableTranslations {\n  indexColumn: string\n  selectColumn: string\n  expandColumn: string\n  paginationLimit: string\n  paginationRange: string\n}\n\nexport const defaultTranslations = <DataTableTranslations>{\n  indexColumn: 'index',\n  selectColumn: 'select',\n  expandColumn: 'expand',\n  paginationLimit: 'Limit',\n  paginationRange: 'Results'\n};\n\nexport interface DataTableParams {\n  offset?: number\n  limit?: number\n  sortBy?: string\n  sortAsc?: boolean\n}\n\nexport interface DataTableRowEvent<T> {\n  row?: DataTableRow<T>\n  event?: MouseEvent\n}\n\nexport interface DataTableCellEvent<T> {\n  row?: DataTableRow<T>\n  column?: DataTableColumn<T>\n  event?: MouseEvent\n}\n\nexport interface DataTableHeaderEvent<T> {\n  column?: DataTableColumn<T>\n  event?: MouseEvent\n}\n","import {\n  Component,\n  ContentChild,\n  ContentChildren,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChildren\n} from '@angular/core';\nimport {DataTableColumn, DataTableRow, DataTableTitle} from '../../';\nimport {drag} from '../../utils/drag';\nimport {\n  DataTableCellEvent,\n  DataTableHeaderEvent,\n  DataTableParams,\n  DataTableRowEvent,\n  DataTableTranslations,\n  defaultTranslations,\n  RowCallback\n} from '../types';\n\n\n@Component({\n  selector: 'data-table',\n  template: `<div class=\"data-table-wrapper\">\n  <data-table-title *ngIf=\"title\"></data-table-title>\n\n  <div class=\"data-table-box\">\n    <table class=\"table table-condensed data-table\">\n      <thead>\n      <tr>\n        <th [hide]=\"!expandColumnVisible\" class=\"expand-column-header\">\n        <th [hide]=\"!indexColumnVisible\" class=\"index-column-header\">\n          <span [textContent]=\"indexColumnHeader\"></span>\n        </th>\n        <th [hide]=\"!selectColumnVisible\" class=\"select-column-header\">\n          <input [hide]=\"!multiSelect\" type=\"checkbox\" [(ngModel)]=\"selectAllCheckbox\"/>\n        </th>\n        <th *ngFor=\"let column of columns\" #th [hide]=\"!column.visible\" (click)=\"headerClicked(column, $event)\"\n            [class.sortable]=\"column.sortable\" [class.resizable]=\"column.resizable\"\n            [ngClass]=\"column.styleClassObject\" class=\"column-header\" [style.width]=\"column.width | px\">\n          <span *ngIf=\"!column.headerTemplate\" [textContent]=\"column.header\"></span>\n          <ng-container *ngIf=\"column.headerTemplate\" [ngTemplateOutlet]=\"column.headerTemplate\"\n                [ngTemplateOutletContext]=\"{column: column}\"></ng-container>\n          <span class=\"column-sort-icon\" *ngIf=\"column.sortable\">\n            <i class=\"fa fa-sort column-sortable-icon\" [hide]=\"column.property === sortBy\"></i>\n            <span [hide]=\"column.property !== sortBy\">\n              <i class=\"fa fa-sort-asc\" [hide]=\"sortAsc\"></i>\n              <i class=\"fa fa-sort-desc\" [hide]=\"!sortAsc\"></i>\n            </span>\n          </span>\n          <span *ngIf=\"column.resizable\" class=\"column-resize-handle\"\n                (mousedown)=\"resizeColumnStart($event, column, th)\"></span>\n        </th>\n      </tr>\n      </thead>\n      <tbody *ngFor=\"let item of items; let index=index\" class=\"data-table-row-wrapper\"\n             dataTableRow #row [item]=\"item\" [index]=\"index\" (selectedChange)=\"onRowSelectChanged(row)\">\n      </tbody>\n      <tbody class=\"substitute-rows\" *ngIf=\"pagination && substituteRows\">\n      <tr *ngFor=\"let item of substituteItems, let index = index\"\n          [class.row-odd]=\"(index + items.length) % 2 === 0\"\n          [class.row-even]=\"(index + items.length) % 2 === 1\">\n        <td [hide]=\"!expandColumnVisible\"></td>\n        <td [hide]=\"!indexColumnVisible\">&nbsp;</td>\n        <td [hide]=\"!selectColumnVisible\"></td>\n        <td *ngFor=\"let column of columns\" [hide]=\"!column.visible\">\n      </tr>\n      </tbody>\n    </table>\n    <div class=\"loading-cover\" *ngIf=\"showReloading && reloading\"></div>\n  </div>\n\n  <data-table-pagination *ngIf=\"pagination\"></data-table-pagination>\n</div>\n`,\n  styles: [`:host /deep/ .data-table.table>tbody+tbody{border-top:none}:host /deep/ .data-table.table td{vertical-align:middle}:host /deep/ .data-table>tbody>tr>td,:host /deep/ .data-table>thead>tr>th{overflow:hidden}:host /deep/ .row-odd{background-color:#f6f6f6}.data-table .substitute-rows>tr:hover,:host /deep/ .data-table .data-table-row:hover{background-color:#ececec}.data-table{box-shadow:0 0 15px #ececec;table-layout:fixed}.column-header{position:relative}.expand-column-header{width:50px}.select-column-header{width:50px;text-align:center}.index-column-header{width:40px}.column-header.sortable{cursor:pointer}.column-header .column-sort-icon{float:right}.column-header.resizable .column-sort-icon{margin-right:8px}.column-header .column-sort-icon .column-sortable-icon{color:#d3d3d3}.column-header .column-resize-handle{position:absolute;top:0;right:0;margin:0;padding:0;width:8px;height:100%;cursor:col-resize}.data-table-box{position:relative}.loading-cover{position:absolute;width:100%;height:100%;background-color:rgba(255,255,255,.3);top:0}`]\n})\nexport class DataTable<T> implements DataTableParams, OnInit {\n\n  // UI state without input:\n  indexColumnVisible: boolean;\n  selectColumnVisible: boolean;\n  expandColumnVisible: boolean;\n\n  // UI state: visible ge/set for the outside with @Input for one-time initial values\n  private _sortBy: string;\n  private _sortAsc = true;\n  private _offset = 0;\n  private _limit = 10;\n  private _items: T[] = [];\n  private _scheduledReload: number = null;\n  private _selectAllCheckbox = false;\n  private _displayParams = <DataTableParams>{};\n  private _reloading = false;\n  private _resizeInProgress = false;\n\n  selectedRow: DataTableRow<T>;\n  selectedRows: DataTableRow<T>[] = [];\n  resizeLimit = 30;\n\n  @Input()\n  itemCount: number;\n  @Input()\n  pagination = true;\n  @Input()\n  indexColumn = true;\n  @Input()\n  indexColumnHeader = '';\n  @Input()\n  rowColors: RowCallback<T>;\n  @Input()\n  rowTooltip: RowCallback<T>;\n  @Input()\n  selectColumn = false;\n  @Input()\n  multiSelect = true;\n  @Input()\n  substituteRows = true;\n  @Input()\n  expandableRows = false;\n  @Input()\n  translations: DataTableTranslations = defaultTranslations;\n  @Input()\n  selectOnRowClick = false;\n  @Input()\n  autoReload = true;\n  @Input()\n  showReloading = false;\n\n  // event handlers:\n  @Output()\n  rowClick: EventEmitter<DataTableRowEvent<T>> = new EventEmitter();\n  @Output()\n  rowExpand: EventEmitter<DataTableRowEvent<T>> = new EventEmitter();\n  @Output()\n  rowDoubleClick: EventEmitter<DataTableRowEvent<T>> = new EventEmitter();\n  @Output()\n  headerClick: EventEmitter<DataTableHeaderEvent<T>> = new EventEmitter();\n  @Output()\n  cellClick: EventEmitter<DataTableCellEvent<T>> = new EventEmitter();\n  @Output()\n  reload: EventEmitter<DataTableParams> = new EventEmitter();\n\n  // UI components:\n  @ContentChild(forwardRef(() => DataTableTitle))\n  title: DataTableTitle;\n  @ContentChildren(DataTableColumn)\n  columns: QueryList<DataTableColumn<T>>;\n  @ViewChildren(DataTableRow)\n  rows: QueryList<DataTableRow<T>>;\n  @ContentChild('expandTemplate')\n  expandTemplate: TemplateRef<any>;\n\n  @Input()\n  get items() {\n    return this._items;\n  }\n\n  set items(items: any[]) {\n    this._items = items;\n    this._onReloadFinished();\n  }\n\n  @Input()\n  get sortBy() {\n    return this._sortBy;\n  }\n\n  set sortBy(value) {\n    this._sortBy = value;\n    this._triggerReload();\n  }\n\n  @Input()\n  get sortAsc() {\n    return this._sortAsc;\n  }\n\n  set sortAsc(value) {\n    this._sortAsc = value;\n    this._triggerReload();\n  }\n\n  @Input()\n  get offset() {\n    return this._offset;\n  }\n\n  set offset(value) {\n    this._offset = value;\n    this._triggerReload();\n  }\n\n  @Input()\n  get limit() {\n    return this._limit;\n  }\n\n  set limit(value) {\n    this._limit = value;\n    this._triggerReload();\n  }\n\n  // calculated property:\n  @Input()\n  get page() {\n    return Math.floor(this.offset / this.limit) + 1;\n  }\n\n  set page(value) {\n    this.offset = (value - 1) * this.limit;\n  }\n\n  get lastPage() {\n    return Math.ceil(this.itemCount / this.limit);\n  }\n\n  get reloading() {\n    return this._reloading;\n  }\n\n  get displayParams() {\n    return this._displayParams;\n  }\n\n  get selectAllCheckbox() {\n    return this._selectAllCheckbox;\n  }\n\n  set selectAllCheckbox(value) {\n    this._selectAllCheckbox = value;\n    this._onSelectAllChanged(value);\n  }\n\n  get columnCount() {\n    let count = 0;\n    count += this.indexColumnVisible ? 1 : 0;\n    count += this.selectColumnVisible ? 1 : 0;\n    count += this.expandColumnVisible ? 1 : 0;\n    this.columns.toArray().forEach(column => {\n      count += column.visible ? 1 : 0;\n    });\n    return count;\n  }\n\n  get substituteItems() {\n    return Array.from({length: this.displayParams!.limit - this.items.length});\n  }\n\n  getRowColor(item: any, index: number, row: DataTableRow<T>) {\n    if (this.rowColors !== undefined) {\n      return (<RowCallback<T>>this.rowColors)(item, row, index);\n    }\n  }\n\n  // setting multiple observable properties simultaneously\n  sort(sortBy: string, asc: boolean) {\n    this.sortBy = sortBy;\n    this.sortAsc = asc;\n  }\n\n  reloadItems() {\n    this._reloading = true;\n    this.reload.emit(this._getRemoteParameters());\n  }\n\n  rowClicked(row: DataTableRow<T>, event: MouseEvent) {\n    this.rowClick.emit({row, event});\n  }\n\n  rowDoubleClicked(row: DataTableRow<T>, event: MouseEvent) {\n    this.rowDoubleClick.emit({row, event});\n  }\n\n  headerClicked(column: DataTableColumn<T>, event: MouseEvent) {\n    if (!this._resizeInProgress) {\n      this.headerClick.emit({column, event});\n    } else {\n      // this is because I can't prevent click from mousup of the drag end\n      this._resizeInProgress = false;\n    }\n  }\n\n  cellClicked(column: DataTableColumn<T>, row: DataTableRow<T>, event: MouseEvent) {\n    this.cellClick.emit({row, column, event});\n  }\n\n  rowExpanded(row: DataTableRow<T>, event: MouseEvent) {\n    this.rowExpand.emit({row, event});\n  }\n\n  onRowSelectChanged(row: DataTableRow<T>) {\n    // maintain the selectedRow(s) view\n    if (this.multiSelect) {\n      let index = this.selectedRows.indexOf(row);\n      if (row.selected && index < 0) {\n        this.selectedRows.push(row);\n      } else if (!row.selected && index >= 0) {\n        this.selectedRows.splice(index, 1);\n      }\n    } else {\n      if (row.selected) {\n        this.selectedRow = row;\n      } else if (this.selectedRow === row) {\n        this.selectedRow = undefined;\n      }\n    }\n    // unselect all other rows:\n    if (row.selected && !this.multiSelect) {\n      this.rows.toArray().filter(row_ => row_.selected).forEach(row_ => {\n        if (row_ !== row) { // avoid endless loop\n          row_.selected = false;\n        }\n      });\n    }\n  }\n\n  resizeColumnStart(event: MouseEvent, column: DataTableColumn<T>, columnElement: HTMLElement) {\n    this._resizeInProgress = true;\n    drag(event, {\n      move: (moveEvent: MouseEvent, dx: number) => {\n        if (this._isResizeInLimit(columnElement, dx)) {\n          column.width = columnElement.offsetWidth + dx;\n        }\n      },\n    });\n  }\n\n  // init\n  ngOnInit() {\n    this._initDefaultValues();\n    this._initDefaultClickEvents();\n    this._updateDisplayParams();\n    if (this.autoReload && this._scheduledReload == null) {\n      this.reloadItems();\n    }\n  }\n\n  private _initDefaultValues() {\n    this.indexColumnVisible = this.indexColumn;\n    this.selectColumnVisible = this.selectColumn;\n    this.expandColumnVisible = this.expandableRows;\n  }\n\n  private _initDefaultClickEvents() {\n    this.headerClick.subscribe(tableEvent => this._sortColumn(tableEvent.column));\n    if (this.selectOnRowClick) {\n      this.rowClick.subscribe(tableEvent => tableEvent.row.selected = !tableEvent.row.selected);\n    }\n  }\n\n  private _onReloadFinished() {\n    this._updateDisplayParams();\n    this._selectAllCheckbox = false;\n    this._reloading = false;\n  }\n\n  private _updateDisplayParams() {\n    this._displayParams = {\n      sortBy: this.sortBy,\n      sortAsc: this.sortAsc,\n      offset: this.offset,\n      limit: this.limit\n    };\n  }\n\n  private _triggerReload() {\n    // for avoiding cascading reloads if multiple params are set at once:\n    if (this._scheduledReload) {\n      clearTimeout(this._scheduledReload);\n    }\n    this._scheduledReload = setTimeout(() => {\n      this.reloadItems();\n    });\n  }\n\n  private _getRemoteParameters(): DataTableParams {\n    let params = <DataTableParams>{};\n\n    if (this.sortBy) {\n      params.sortBy = this.sortBy;\n      params.sortAsc = this.sortAsc;\n    }\n    if (this.pagination) {\n      params.offset = this.offset;\n      params.limit = this.limit;\n    }\n    return params;\n  }\n\n  private _sortColumn(column: DataTableColumn<T>) {\n    if (column.sortable) {\n      let ascending = this.sortBy === column.property ? !this.sortAsc : true;\n      this.sort(column.property, ascending);\n    }\n  }\n\n  private _onSelectAllChanged(value: boolean) {\n    this.rows.toArray().forEach(row => row.selected = value);\n  }\n\n  private _isResizeInLimit(columnElement: HTMLElement, dx: number) {\n    /* This is needed because CSS min-width didn't work on table-layout: fixed.\n     Without the limits, resizing can make the next column disappear completely,\n     and even increase the table width. The current implementation suffers from the fact,\n     that offsetWidth sometimes contains out-of-date values. */\n    return !((dx < 0 && (columnElement.offsetWidth + dx) <= this.resizeLimit) ||\n      !columnElement.nextElementSibling || // resizing doesn't make sense for the last visible column\n      (dx >= 0 && ((<HTMLElement> columnElement.nextElementSibling).offsetWidth + dx) <= this.resizeLimit));\n  }\n}\n","import {Component, forwardRef, HostListener, Inject} from '@angular/core';\nimport {DataTable} from '../../';\n\n@Component({\n  selector: 'data-table-title',\n  template: `<div class=\"navbar\">\n  <h4 class=\"title\" [textContent]=\"dataTable.title.title\"></h4>\n  <ng-container *ngIf=\"dataTable.title.titleTemplate\" [ngTemplateOutlet]=\"dataTable.title.titleTemplate\"\n                [ngTemplateOutletContext]=\"{items: dataTable.items}\">\n  </ng-container>\n  <div *ngIf=\"dataTable.title.controls\">\n    <button type=\"button\" class=\"btn btn-default btn-sm refresh-button\" (click)=\"dataTable.reloadItems()\">\n      <i class=\"fa fa-refresh\"></i>\n    </button>\n    <button type=\"button\" class=\"btn btn-default btn-sm column-selector-button\" [class.active]=\"columnSelectorOpen\"\n            (click)=\"columnSelectorOpen = !columnSelectorOpen; $event.stopPropagation()\">\n      <i class=\"fa fa-list\"></i>\n    </button>\n    <div class=\"column-selector-wrapper\" (click)=\"$event.stopPropagation()\">\n      <div *ngIf=\"columnSelectorOpen\" class=\"column-selector-box card\">\n        <div *ngIf=\"dataTable.expandableRows\" class=\"column-selector-fixed-column checkbox\">\n          <label>\n            <input type=\"checkbox\" [(ngModel)]=\"dataTable.expandColumnVisible\"/>\n            <span>{{dataTable.translations.expandColumn}}</span>\n          </label>\n        </div>\n        <div *ngIf=\"dataTable.indexColumn\" class=\"column-selector-fixed-column checkbox\">\n          <label>\n            <input type=\"checkbox\" [(ngModel)]=\"dataTable.indexColumnVisible\"/>\n            <span>{{dataTable.translations.indexColumn}}</span>\n          </label>\n        </div>\n        <div *ngIf=\"dataTable.selectColumn\" class=\"column-selector-fixed-column checkbox\">\n          <label>\n            <input type=\"checkbox\" [(ngModel)]=\"dataTable.selectColumnVisible\"/>\n            <span>{{dataTable.translations.selectColumn}}</span>\n          </label>\n        </div>\n        <div *ngFor=\"let column of dataTable.columns\" class=\"column-selector-column checkbox\">\n          <label>\n            <input type=\"checkbox\" [(ngModel)]=\"column.visible\"/>\n            <span [textContent]=\"column.header\"></span>\n          </label>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n`,\n  styles: [`.navbar{padding:10px 0}.navbar .title{margin:5px 0 0 5px}.column-selector-wrapper{position:relative}.column-selector-wrapper .column-selector-box{box-shadow:0 0 10px #d3d3d3;width:150px;padding:10px;position:absolute;right:0;top:1px;z-index:1060}.column-selector-wrapper .column-selector-box .checkbox{margin-bottom:4px}.column-selector-wrapper .column-selector-box .column-selector-fixed-column{font-style:italic}`]\n})\nexport class DataTableTitleComponent<T> {\n\n  columnSelectorOpen = false;\n\n  constructor(@Inject(forwardRef(() => DataTable)) public dataTable: DataTable<T>) {\n  }\n\n  @HostListener('document:click', ['$event'])\n  _closeSelector($event) {\n    this.columnSelectorOpen = false;\n  }\n}\n\n","import {ContentChild, Directive, Input, TemplateRef} from '@angular/core';\n\n@Directive({\n  selector: 'data-table-title'\n})\nexport class DataTableTitle {\n\n  @Input()\n  title = '';\n  @ContentChild('titleTemplate')\n  titleTemplate: TemplateRef<any>;\n  @Input()\n  controls = true;\n}\n","import {Directive, ElementRef, Input, Renderer} from '@angular/core';\n\n\nfunction isBlank(obj: any): boolean {\n  return obj === undefined || obj === null;\n}\n\n@Directive({selector: '[hide]'})\nexport class HideDirective {\n\n  private _prevCondition: boolean = null;\n  private _displayStyle: string;\n\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer) {\n  }\n\n  @Input()\n  set hide(newCondition: boolean) {\n    this.initDisplayStyle();\n\n    if (newCondition && (isBlank(this._prevCondition) || !this._prevCondition)) {\n      this._prevCondition = true;\n      this._renderer.setElementStyle(this._elementRef.nativeElement, 'display', 'none');\n    } else if (!newCondition && (isBlank(this._prevCondition) || this._prevCondition)) {\n      this._prevCondition = false;\n      this._renderer.setElementStyle(this._elementRef.nativeElement, 'display', this._displayStyle);\n    }\n  }\n\n  private initDisplayStyle() {\n    if (this._displayStyle === undefined) {\n      let displayStyle = this._elementRef.nativeElement.style.display;\n      if (displayStyle && displayStyle !== 'none') {\n        this._displayStyle = displayStyle;\n      }\n    }\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'min'\n})\nexport class MinPipe implements PipeTransform {\n\n  transform(value: number[], ...args: any[]): any {\n    return Math.min.apply(null, value);\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'px'\n})\nexport class PxPipe implements PipeTransform {\n\n  transform(value: string | number, ...args: any[]): any {\n    if (value) {\n      return Number(value) >= 0 ? `${value}px` : value;\n    }\n  }\n}\n","import {DataTableParams} from '..';\n\n\nexport class DataTableResource<T> {\n\n  constructor(private items: T[]) {\n  }\n\n  query(params: DataTableParams, filter?: (item: T, index: number, items: T[]) => boolean): Promise<T[]> {\n\n    let result: T[] = [];\n    if (filter) {\n      result = this.items.filter(filter);\n    } else {\n      result = this.items.slice(); // shallow copy to use for sorting instead of changing the original\n    }\n\n    if (params.sortBy) {\n      result.sort((a: any, b: any) => {\n        if (typeof a[params.sortBy] === 'string') {\n          return a[params.sortBy].localeCompare(b[params.sortBy]);\n        } else {\n          return a[params.sortBy] - b[params.sortBy];\n        }\n      });\n      if (params.sortAsc === false) {\n        result.reverse();\n      }\n    }\n    if (params.offset !== undefined) {\n      if (params.limit === undefined) {\n        result = result.slice(params.offset, result.length);\n      } else {\n        result = result.slice(params.offset, params.offset + params.limit);\n      }\n    }\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => resolve(result));\n    });\n  }\n\n  count(): Promise<number> {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => resolve(this.items.length));\n    });\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {DataTableColumn} from './components/column/column.directive';\nimport {DataTablePagination} from './components/pagination/pagination.component';\nimport {DataTableRow} from './components/row/row.component';\nimport {DataTable} from './components/table/table.component';\nimport {DataTableTitleComponent} from './components/title/title.component';\nimport {DataTableTitle} from './components/title/title.directive';\nimport {HideDirective} from './utils/hide.directive';\nimport {MinPipe} from './utils/min.pipe';\nimport {PxPipe} from './utils/px.pipe';\n\nexport * from './components/types';\nexport * from './tools/data-table-resource';\n\nexport {DataTable, DataTableColumn, DataTableRow, DataTableTitle, DataTablePagination};\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  declarations: [\n    DataTable,\n    DataTableColumn,\n    DataTableTitle,\n    DataTableRow,\n    DataTablePagination,\n    DataTableTitleComponent,\n    PxPipe,\n    HideDirective,\n    MinPipe\n  ],\n  exports: [DataTable, DataTableColumn, DataTableTitle, DataTablePagination]\n})\nexport class DataTableModule {\n}\n"],"names":["DataTable","DataTableRow","DataTablePagination"],"mappings":"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"}
