/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, forwardRef, Inject } from '@angular/core';
import { DataTable } from '../../';
/**
 * @template T
 */
var DataTablePagination = /** @class */ (function () {
    function DataTablePagination(dataTable) {
        this.dataTable = dataTable;
    }
    Object.defineProperty(DataTablePagination.prototype, "maxPage", {
        get: /**
         * @return {?}
         */
        function () {
            return Math.ceil(this.dataTable.itemCount / this.dataTable.limit);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataTablePagination.prototype, "limit", {
        get: /**
         * @return {?}
         */
        function () {
            return this.dataTable.limit;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (Number(value) > 0) {
                this.dataTable.limit = Math.floor(+value);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataTablePagination.prototype, "page", {
        get: /**
         * @return {?}
         */
        function () {
            return this.dataTable.page;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (Number(value) > 0) {
                this.dataTable.page = Math.floor(+value);
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    DataTablePagination.prototype.pageBack = /**
     * @return {?}
     */
    function () {
        this.dataTable.offset -= Math.min(this.dataTable.limit, this.dataTable.offset);
    };
    /**
     * @return {?}
     */
    DataTablePagination.prototype.pageForward = /**
     * @return {?}
     */
    function () {
        this.dataTable.offset += this.dataTable.limit;
    };
    /**
     * @return {?}
     */
    DataTablePagination.prototype.pageFirst = /**
     * @return {?}
     */
    function () {
        this.dataTable.offset = 0;
    };
    /**
     * @return {?}
     */
    DataTablePagination.prototype.pageLast = /**
     * @return {?}
     */
    function () {
        this.dataTable.offset = (this.maxPage - 1) * this.dataTable.limit;
    };
    /**
     * @param {?} event
     * @return {?}
     */
    DataTablePagination.prototype.keyPress = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        var /** @type {?} */ inputChar = String.fromCharCode(event.charCode);
        if (!(Number(inputChar) >= 0)) {
            event.preventDefault();
        }
    };
    DataTablePagination.decorators = [
        { type: Component, args: [{
                    selector: 'data-table-pagination',
                    template: "<div class=\"navbar p-0 pagination-component\">\n  <div>\n    {{dataTable.translations.paginationRange}}:&nbsp;{{dataTable.offset < 0 ? 0 : dataTable.offset + 1}}&nbsp;-\n    {{[dataTable.offset + dataTable.limit , dataTable.itemCount] | min}}&nbsp;/&nbsp;{{dataTable.itemCount}}\n  </div>\n  <ul class=\"nav justify-content-end\">\n    <li class=\"nav-item pagination-limit\">\n      <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\">{{dataTable.translations.paginationLimit}}:</span>\n        </div>\n        <input #limitInput type=\"number\" class=\"form-control\" min=\"1\" step=\"1\"\n               [ngModel]=\"limit\" (blur)=\"limit = limitInput.value\"\n               (keyup.enter)=\"limit = limitInput.value\"\n               (keyup.esc)=\"limitInput.value = limit\"\n               (keypress)=\"keyPress($event)\"/>\n      </div>\n    </li>\n    <li class=\"nav-item\">\n      <button [disabled]=\"dataTable.offset <= 0\" (click)=\"pageFirst()\" class=\"btn btn-default\">&laquo;</button>\n      <button [disabled]=\"dataTable.offset <= 0\" (click)=\"pageBack()\" class=\"btn btn-default\">&lsaquo;</button>\n      <div class=\"d-inline-block\">\n        <div class=\"input-group\">\n          <input #pageInput type=\"number\" class=\"form-control\" min=\"1\" step=\"1\" max=\"{{maxPage}}\"\n                 [ngModel]=\"page\" (blur)=\"page = pageInput.value\"\n                 (keyup.enter)=\"page = pageInput.value\" (keyup.esc)=\"pageInput.value = page\"\n                 (keypress)=\"keyPress($event)\"/>\n          <div class=\"input-group-append\">\n            <span class=\"input-group-text\">/&nbsp;{{dataTable.lastPage}}</span>\n          </div>\n        </div>\n      </div>\n      <button [disabled]=\"(dataTable.offset + dataTable.limit) >= dataTable.itemCount\" (click)=\"pageForward()\"\n              class=\"btn btn-default\">&rsaquo;\n      </button>\n      <button [disabled]=\"(dataTable.offset + dataTable.limit) >= dataTable.itemCount\" (click)=\"pageLast()\"\n              class=\"btn btn-default\">&raquo;\n      </button>\n    </li>\n  </ul>\n</div>\n",
                    styles: [".pagination-component .pagination-limit{margin-right:1rem}.pagination-component .pagination-limit input{width:75px}.pagination-component .btn{margin-top:-3px}"]
                },] },
    ];
    /** @nocollapse */
    DataTablePagination.ctorParameters = function () { return [
        { type: DataTable, decorators: [{ type: Inject, args: [forwardRef(function () { return DataTable; }),] }] }
    ]; };
    return DataTablePagination;
}());
export { DataTablePagination };
function DataTablePagination_tsickle_Closure_declarations() {
    /** @type {?} */
    DataTablePagination.prototype.dataTable;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnaW5hdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtZGF0YXRhYmxlLWJvb3RzdHJhcDQvIiwic291cmNlcyI6WyJjb21wb25lbnRzL3BhZ2luYXRpb24vcGFnaW5hdGlvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUM1RCxPQUFPLEVBQUMsU0FBUyxFQUFDLE1BQU0sUUFBUSxDQUFDOzs7OztJQW1EL0IsNkJBQXdELFNBQXVCO1FBQXZCLGNBQVMsR0FBVCxTQUFTLENBQWM7S0FDOUU7SUFFRCxzQkFBSSx3Q0FBTzs7OztRQUFYO1lBQ0UsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUNuRTs7O09BQUE7SUFFRCxzQkFBSSxzQ0FBSzs7OztRQUFUO1lBQ0UsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDO1NBQzdCOzs7OztRQUVELFVBQVUsS0FBSztZQUNiLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUN0QixJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUM7YUFDM0M7U0FDRjs7O09BTkE7SUFRRCxzQkFBSSxxQ0FBSTs7OztRQUFSO1lBQ0UsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDO1NBQzVCOzs7OztRQUVELFVBQVMsS0FBSztZQUNaLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUN0QixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUM7YUFDMUM7U0FDRjs7O09BTkE7Ozs7SUFRRCxzQ0FBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUM7S0FDaEY7Ozs7SUFFRCx5Q0FBVzs7O0lBQVg7UUFDRSxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQztLQUMvQzs7OztJQUVELHVDQUFTOzs7SUFBVDtRQUNFLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztLQUMzQjs7OztJQUVELHNDQUFROzs7SUFBUjtRQUNFLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQztLQUNuRTs7Ozs7SUFFRCxzQ0FBUTs7OztJQUFSLFVBQVMsS0FBVTtRQUNqQixxQkFBSSxTQUFTLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDcEQsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDOUIsS0FBSyxDQUFDLGNBQWMsRUFBRSxDQUFDO1NBQ3hCO0tBQ0Y7O2dCQWhHRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHVCQUF1QjtvQkFDakMsUUFBUSxFQUFFLGtuRUF5Q1g7b0JBQ0MsTUFBTSxFQUFFLENBQUMsZ0tBQWdLLENBQUM7aUJBQzNLOzs7O2dCQWhETyxTQUFTLHVCQW1ERixNQUFNLFNBQUMsVUFBVSxDQUFDLGNBQU0sT0FBQSxTQUFTLEVBQVQsQ0FBUyxDQUFDOzs4QkFwRGpEOztTQWtEYSxtQkFBbUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgZm9yd2FyZFJlZiwgSW5qZWN0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7RGF0YVRhYmxlfSBmcm9tICcuLi8uLi8nO1xuXG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2RhdGEtdGFibGUtcGFnaW5hdGlvbicsXG4gIHRlbXBsYXRlOiBgPGRpdiBjbGFzcz1cIm5hdmJhciBwLTAgcGFnaW5hdGlvbi1jb21wb25lbnRcIj5cbiAgPGRpdj5cbiAgICB7e2RhdGFUYWJsZS50cmFuc2xhdGlvbnMucGFnaW5hdGlvblJhbmdlfX06Jm5ic3A7e3tkYXRhVGFibGUub2Zmc2V0IDwgMCA/IDAgOiBkYXRhVGFibGUub2Zmc2V0ICsgMX19Jm5ic3A7LVxuICAgIHt7W2RhdGFUYWJsZS5vZmZzZXQgKyBkYXRhVGFibGUubGltaXQgLCBkYXRhVGFibGUuaXRlbUNvdW50XSB8IG1pbn19Jm5ic3A7LyZuYnNwO3t7ZGF0YVRhYmxlLml0ZW1Db3VudH19XG4gIDwvZGl2PlxuICA8dWwgY2xhc3M9XCJuYXYganVzdGlmeS1jb250ZW50LWVuZFwiPlxuICAgIDxsaSBjbGFzcz1cIm5hdi1pdGVtIHBhZ2luYXRpb24tbGltaXRcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJpbnB1dC1ncm91cFwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiaW5wdXQtZ3JvdXAtcHJlcGVuZFwiPlxuICAgICAgICAgIDxzcGFuIGNsYXNzPVwiaW5wdXQtZ3JvdXAtdGV4dFwiPnt7ZGF0YVRhYmxlLnRyYW5zbGF0aW9ucy5wYWdpbmF0aW9uTGltaXR9fTo8L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8aW5wdXQgI2xpbWl0SW5wdXQgdHlwZT1cIm51bWJlclwiIGNsYXNzPVwiZm9ybS1jb250cm9sXCIgbWluPVwiMVwiIHN0ZXA9XCIxXCJcbiAgICAgICAgICAgICAgIFtuZ01vZGVsXT1cImxpbWl0XCIgKGJsdXIpPVwibGltaXQgPSBsaW1pdElucHV0LnZhbHVlXCJcbiAgICAgICAgICAgICAgIChrZXl1cC5lbnRlcik9XCJsaW1pdCA9IGxpbWl0SW5wdXQudmFsdWVcIlxuICAgICAgICAgICAgICAgKGtleXVwLmVzYyk9XCJsaW1pdElucHV0LnZhbHVlID0gbGltaXRcIlxuICAgICAgICAgICAgICAgKGtleXByZXNzKT1cImtleVByZXNzKCRldmVudClcIi8+XG4gICAgICA8L2Rpdj5cbiAgICA8L2xpPlxuICAgIDxsaSBjbGFzcz1cIm5hdi1pdGVtXCI+XG4gICAgICA8YnV0dG9uIFtkaXNhYmxlZF09XCJkYXRhVGFibGUub2Zmc2V0IDw9IDBcIiAoY2xpY2spPVwicGFnZUZpcnN0KClcIiBjbGFzcz1cImJ0biBidG4tZGVmYXVsdFwiPiZsYXF1bzs8L2J1dHRvbj5cbiAgICAgIDxidXR0b24gW2Rpc2FibGVkXT1cImRhdGFUYWJsZS5vZmZzZXQgPD0gMFwiIChjbGljayk9XCJwYWdlQmFjaygpXCIgY2xhc3M9XCJidG4gYnRuLWRlZmF1bHRcIj4mbHNhcXVvOzwvYnV0dG9uPlxuICAgICAgPGRpdiBjbGFzcz1cImQtaW5saW5lLWJsb2NrXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJpbnB1dC1ncm91cFwiPlxuICAgICAgICAgIDxpbnB1dCAjcGFnZUlucHV0IHR5cGU9XCJudW1iZXJcIiBjbGFzcz1cImZvcm0tY29udHJvbFwiIG1pbj1cIjFcIiBzdGVwPVwiMVwiIG1heD1cInt7bWF4UGFnZX19XCJcbiAgICAgICAgICAgICAgICAgW25nTW9kZWxdPVwicGFnZVwiIChibHVyKT1cInBhZ2UgPSBwYWdlSW5wdXQudmFsdWVcIlxuICAgICAgICAgICAgICAgICAoa2V5dXAuZW50ZXIpPVwicGFnZSA9IHBhZ2VJbnB1dC52YWx1ZVwiIChrZXl1cC5lc2MpPVwicGFnZUlucHV0LnZhbHVlID0gcGFnZVwiXG4gICAgICAgICAgICAgICAgIChrZXlwcmVzcyk9XCJrZXlQcmVzcygkZXZlbnQpXCIvPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJpbnB1dC1ncm91cC1hcHBlbmRcIj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiaW5wdXQtZ3JvdXAtdGV4dFwiPi8mbmJzcDt7e2RhdGFUYWJsZS5sYXN0UGFnZX19PC9zcGFuPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGJ1dHRvbiBbZGlzYWJsZWRdPVwiKGRhdGFUYWJsZS5vZmZzZXQgKyBkYXRhVGFibGUubGltaXQpID49IGRhdGFUYWJsZS5pdGVtQ291bnRcIiAoY2xpY2spPVwicGFnZUZvcndhcmQoKVwiXG4gICAgICAgICAgICAgIGNsYXNzPVwiYnRuIGJ0bi1kZWZhdWx0XCI+JnJzYXF1bztcbiAgICAgIDwvYnV0dG9uPlxuICAgICAgPGJ1dHRvbiBbZGlzYWJsZWRdPVwiKGRhdGFUYWJsZS5vZmZzZXQgKyBkYXRhVGFibGUubGltaXQpID49IGRhdGFUYWJsZS5pdGVtQ291bnRcIiAoY2xpY2spPVwicGFnZUxhc3QoKVwiXG4gICAgICAgICAgICAgIGNsYXNzPVwiYnRuIGJ0bi1kZWZhdWx0XCI+JnJhcXVvO1xuICAgICAgPC9idXR0b24+XG4gICAgPC9saT5cbiAgPC91bD5cbjwvZGl2PlxuYCxcbiAgc3R5bGVzOiBbYC5wYWdpbmF0aW9uLWNvbXBvbmVudCAucGFnaW5hdGlvbi1saW1pdHttYXJnaW4tcmlnaHQ6MXJlbX0ucGFnaW5hdGlvbi1jb21wb25lbnQgLnBhZ2luYXRpb24tbGltaXQgaW5wdXR7d2lkdGg6NzVweH0ucGFnaW5hdGlvbi1jb21wb25lbnQgLmJ0bnttYXJnaW4tdG9wOi0zcHh9YF1cbn0pXG5leHBvcnQgY2xhc3MgRGF0YVRhYmxlUGFnaW5hdGlvbjxUPiB7XG5cbiAgY29uc3RydWN0b3IoQEluamVjdChmb3J3YXJkUmVmKCgpID0+IERhdGFUYWJsZSkpIHB1YmxpYyBkYXRhVGFibGU6IERhdGFUYWJsZTxUPikge1xuICB9XG5cbiAgZ2V0IG1heFBhZ2UoKSB7XG4gICAgcmV0dXJuIE1hdGguY2VpbCh0aGlzLmRhdGFUYWJsZS5pdGVtQ291bnQgLyB0aGlzLmRhdGFUYWJsZS5saW1pdCk7XG4gIH1cblxuICBnZXQgbGltaXQoKSB7XG4gICAgcmV0dXJuIHRoaXMuZGF0YVRhYmxlLmxpbWl0O1xuICB9XG5cbiAgc2V0IGxpbWl0KHZhbHVlKSB7XG4gICAgaWYgKE51bWJlcih2YWx1ZSkgPiAwKSB7XG4gICAgICB0aGlzLmRhdGFUYWJsZS5saW1pdCA9IE1hdGguZmxvb3IoK3ZhbHVlKTtcbiAgICB9XG4gIH1cblxuICBnZXQgcGFnZSgpIHtcbiAgICByZXR1cm4gdGhpcy5kYXRhVGFibGUucGFnZTtcbiAgfVxuXG4gIHNldCBwYWdlKHZhbHVlKSB7XG4gICAgaWYgKE51bWJlcih2YWx1ZSkgPiAwKSB7XG4gICAgICB0aGlzLmRhdGFUYWJsZS5wYWdlID0gTWF0aC5mbG9vcigrdmFsdWUpO1xuICAgIH1cbiAgfVxuXG4gIHBhZ2VCYWNrKCkge1xuICAgIHRoaXMuZGF0YVRhYmxlLm9mZnNldCAtPSBNYXRoLm1pbih0aGlzLmRhdGFUYWJsZS5saW1pdCwgdGhpcy5kYXRhVGFibGUub2Zmc2V0KTtcbiAgfVxuXG4gIHBhZ2VGb3J3YXJkKCkge1xuICAgIHRoaXMuZGF0YVRhYmxlLm9mZnNldCArPSB0aGlzLmRhdGFUYWJsZS5saW1pdDtcbiAgfVxuXG4gIHBhZ2VGaXJzdCgpIHtcbiAgICB0aGlzLmRhdGFUYWJsZS5vZmZzZXQgPSAwO1xuICB9XG5cbiAgcGFnZUxhc3QoKSB7XG4gICAgdGhpcy5kYXRhVGFibGUub2Zmc2V0ID0gKHRoaXMubWF4UGFnZSAtIDEpICogdGhpcy5kYXRhVGFibGUubGltaXQ7XG4gIH1cblxuICBrZXlQcmVzcyhldmVudDogYW55KSB7XG4gICAgbGV0IGlucHV0Q2hhciA9IFN0cmluZy5mcm9tQ2hhckNvZGUoZXZlbnQuY2hhckNvZGUpO1xuICAgIGlmICghKE51bWJlcihpbnB1dENoYXIpID49IDApKSB7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH1cbiAgfVxufVxuIl19