/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, EventEmitter, forwardRef, Inject, Input, Output } from '@angular/core';
import { DataTable } from '../../';
/**
 * @template T
 */
var DataTableRow = /** @class */ (function () {
    function DataTableRow(dataTable) {
        this.dataTable = dataTable;
        this.selectedChange = new EventEmitter();
        this._this = this;
    }
    Object.defineProperty(DataTableRow.prototype, "selected", {
        get: /**
         * @return {?}
         */
        function () {
            return this._selected;
        },
        set: /**
         * @param {?} selected
         * @return {?}
         */
        function (selected) {
            this._selected = selected;
            this.selectedChange.emit(selected);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataTableRow.prototype, "displayIndex", {
        // other:
        get: /**
         * @return {?}
         */
        function () {
            if (this.dataTable.pagination) {
                return this.dataTable.displayParams.offset + this.index + 1;
            }
            else {
                return this.index + 1;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    DataTableRow.prototype.getTooltip = /**
     * @return {?}
     */
    function () {
        if (this.dataTable.rowTooltip) {
            return this.dataTable.rowTooltip(this.item, this, this.index);
        }
        return '';
    };
    /**
     * @return {?}
     */
    DataTableRow.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.selected = false;
    };
    DataTableRow.decorators = [
        { type: Component, args: [{
                    selector: '[dataTableRow]',
                    template: "<tr class=\"data-table-row\"\n    [title]=\"getTooltip()\"\n    [style.background-color]=\"dataTable.getRowColor(item, index, _this)\"\n    [class.row-odd]=\"index % 2 === 0\"\n    [class.row-even]=\"index % 2 === 1\"\n    [class.selected]=\"selected\"\n    [class.clickable]=\"dataTable.selectOnRowClick\"\n    (dblclick)=\"dataTable.rowDoubleClicked(_this, $event)\"\n    (click)=\"dataTable.rowClicked(_this, $event)\">\n  <td [hide]=\"!dataTable.expandColumnVisible\" class=\"row-expand-button\"\n      (click)=\"expanded = !expanded; $event.stopPropagation(); dataTable.rowExpanded(_this, $event)\">\n    <span class=\"fa fa-arrow-circle-o-right\" [hide]=\"expanded\"></span>\n    <span class=\"fa fa-arrow-circle-o-down\" [hide]=\"!expanded\"></span>\n  </td>\n  <td [hide]=\"!dataTable.indexColumnVisible\" class=\"index-column\" [textContent]=\"displayIndex\"></td>\n  <td [hide]=\"!dataTable.selectColumnVisible\" class=\"select-column\">\n    <input type=\"checkbox\" [(ngModel)]=\"selected\"/>\n  </td>\n  <td *ngFor=\"let column of dataTable.columns\" [hide]=\"!column.visible\" [ngClass]=\"column.styleClassObject\"\n      class=\"data-column\"\n      [style.background-color]=\"column.getCellColor(_this, index)\"\n      (click)=\"dataTable.cellClicked(column, _this, $event)\">\n    <div *ngIf=\"!column.cellTemplate\" [textContent]=\"item[column.property]\"></div>\n    <ng-container *ngIf=\"column.cellTemplate\" [ngTemplateOutlet]=\"column.cellTemplate\"\n         [ngTemplateOutletContext]=\"{column: column, row: _this, item: item}\"></ng-container>\n  </td>\n</tr>\n<tr *ngIf=\"dataTable.expandableRows\" [hide]=\"!expanded\" class=\"row-expansion\">\n  <td [attr.colspan]=\"dataTable.columnCount\">\n    <ng-container [ngTemplateOutlet]=\"dataTable.expandTemplate\"\n                  [ngTemplateOutletContext]=\"{row: _this, item: item}\"></ng-container>\n  </td>\n</tr>\n",
                    styles: [".select-column{text-align:center}.row-expand-button{cursor:pointer;text-align:center}.clickable{cursor:pointer}"]
                },] },
    ];
    /** @nocollapse */
    DataTableRow.ctorParameters = function () { return [
        { type: DataTable, decorators: [{ type: Inject, args: [forwardRef(function () { return DataTable; }),] }] }
    ]; };
    DataTableRow.propDecorators = {
        item: [{ type: Input }],
        index: [{ type: Input }],
        selectedChange: [{ type: Output }]
    };
    return DataTableRow;
}());
export { DataTableRow };
function DataTableRow_tsickle_Closure_declarations() {
    /** @type {?} */
    DataTableRow.prototype._selected;
    /** @type {?} */
    DataTableRow.prototype.expanded;
    /** @type {?} */
    DataTableRow.prototype.item;
    /** @type {?} */
    DataTableRow.prototype.index;
    /** @type {?} */
    DataTableRow.prototype.selectedChange;
    /** @type {?} */
    DataTableRow.prototype._this;
    /** @type {?} */
    DataTableRow.prototype.dataTable;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm93LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1kYXRhdGFibGUtYm9vdHN0cmFwNC8iLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvcm93L3Jvdy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsWUFBWSxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFhLE1BQU0sRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNwRyxPQUFPLEVBQUMsU0FBUyxFQUFDLE1BQU0sUUFBUSxDQUFDOzs7OztJQTBEL0Isc0JBQXdELFNBQXVCO1FBQXZCLGNBQVMsR0FBVCxTQUFTLENBQWM7OEJBTDlELElBQUksWUFBWSxFQUFFO3FCQUdwQixJQUFJO0tBR2xCO0lBRUQsc0JBQUksa0NBQVE7Ozs7UUFBWjtZQUNFLE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDO1NBQ3ZCOzs7OztRQUVELFVBQWEsUUFBUTtZQUNuQixJQUFJLENBQUMsU0FBUyxHQUFHLFFBQVEsQ0FBQztZQUMxQixJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztTQUNwQzs7O09BTEE7SUFRRCxzQkFBSSxzQ0FBWTtRQURoQixTQUFTOzs7O1FBQ1Q7WUFDRSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7Z0JBQzlCLE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUM7YUFDN0Q7WUFBQyxJQUFJLENBQUMsQ0FBQztnQkFDTixNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUM7YUFDdkI7U0FDRjs7O09BQUE7Ozs7SUFFRCxpQ0FBVTs7O0lBQVY7UUFDRSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7WUFDOUIsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUMvRDtRQUNELE1BQU0sQ0FBQyxFQUFFLENBQUM7S0FDWDs7OztJQUVELGtDQUFXOzs7SUFBWDtRQUNFLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO0tBQ3ZCOztnQkFyRkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxnQkFBZ0I7b0JBQzFCLFFBQVEsRUFBRSx5MkRBaUNYO29CQUNDLE1BQU0sRUFBRSxDQUFDLGlIQUFpSCxDQUFDO2lCQUM1SDs7OztnQkF4Q08sU0FBUyx1QkEwREYsTUFBTSxTQUFDLFVBQVUsQ0FBQyxjQUFNLE9BQUEsU0FBUyxFQUFULENBQVMsQ0FBQzs7O3VCQVg5QyxLQUFLO3dCQUVMLEtBQUs7aUNBR0wsTUFBTTs7dUJBckRUOztTQTBDYSxZQUFZIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgZm9yd2FyZFJlZiwgSW5qZWN0LCBJbnB1dCwgT25EZXN0cm95LCBPdXRwdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtEYXRhVGFibGV9IGZyb20gJy4uLy4uLyc7XG5cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnW2RhdGFUYWJsZVJvd10nLFxuICB0ZW1wbGF0ZTogYDx0ciBjbGFzcz1cImRhdGEtdGFibGUtcm93XCJcbiAgICBbdGl0bGVdPVwiZ2V0VG9vbHRpcCgpXCJcbiAgICBbc3R5bGUuYmFja2dyb3VuZC1jb2xvcl09XCJkYXRhVGFibGUuZ2V0Um93Q29sb3IoaXRlbSwgaW5kZXgsIF90aGlzKVwiXG4gICAgW2NsYXNzLnJvdy1vZGRdPVwiaW5kZXggJSAyID09PSAwXCJcbiAgICBbY2xhc3Mucm93LWV2ZW5dPVwiaW5kZXggJSAyID09PSAxXCJcbiAgICBbY2xhc3Muc2VsZWN0ZWRdPVwic2VsZWN0ZWRcIlxuICAgIFtjbGFzcy5jbGlja2FibGVdPVwiZGF0YVRhYmxlLnNlbGVjdE9uUm93Q2xpY2tcIlxuICAgIChkYmxjbGljayk9XCJkYXRhVGFibGUucm93RG91YmxlQ2xpY2tlZChfdGhpcywgJGV2ZW50KVwiXG4gICAgKGNsaWNrKT1cImRhdGFUYWJsZS5yb3dDbGlja2VkKF90aGlzLCAkZXZlbnQpXCI+XG4gIDx0ZCBbaGlkZV09XCIhZGF0YVRhYmxlLmV4cGFuZENvbHVtblZpc2libGVcIiBjbGFzcz1cInJvdy1leHBhbmQtYnV0dG9uXCJcbiAgICAgIChjbGljayk9XCJleHBhbmRlZCA9ICFleHBhbmRlZDsgJGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpOyBkYXRhVGFibGUucm93RXhwYW5kZWQoX3RoaXMsICRldmVudClcIj5cbiAgICA8c3BhbiBjbGFzcz1cImZhIGZhLWFycm93LWNpcmNsZS1vLXJpZ2h0XCIgW2hpZGVdPVwiZXhwYW5kZWRcIj48L3NwYW4+XG4gICAgPHNwYW4gY2xhc3M9XCJmYSBmYS1hcnJvdy1jaXJjbGUtby1kb3duXCIgW2hpZGVdPVwiIWV4cGFuZGVkXCI+PC9zcGFuPlxuICA8L3RkPlxuICA8dGQgW2hpZGVdPVwiIWRhdGFUYWJsZS5pbmRleENvbHVtblZpc2libGVcIiBjbGFzcz1cImluZGV4LWNvbHVtblwiIFt0ZXh0Q29udGVudF09XCJkaXNwbGF5SW5kZXhcIj48L3RkPlxuICA8dGQgW2hpZGVdPVwiIWRhdGFUYWJsZS5zZWxlY3RDb2x1bW5WaXNpYmxlXCIgY2xhc3M9XCJzZWxlY3QtY29sdW1uXCI+XG4gICAgPGlucHV0IHR5cGU9XCJjaGVja2JveFwiIFsobmdNb2RlbCldPVwic2VsZWN0ZWRcIi8+XG4gIDwvdGQ+XG4gIDx0ZCAqbmdGb3I9XCJsZXQgY29sdW1uIG9mIGRhdGFUYWJsZS5jb2x1bW5zXCIgW2hpZGVdPVwiIWNvbHVtbi52aXNpYmxlXCIgW25nQ2xhc3NdPVwiY29sdW1uLnN0eWxlQ2xhc3NPYmplY3RcIlxuICAgICAgY2xhc3M9XCJkYXRhLWNvbHVtblwiXG4gICAgICBbc3R5bGUuYmFja2dyb3VuZC1jb2xvcl09XCJjb2x1bW4uZ2V0Q2VsbENvbG9yKF90aGlzLCBpbmRleClcIlxuICAgICAgKGNsaWNrKT1cImRhdGFUYWJsZS5jZWxsQ2xpY2tlZChjb2x1bW4sIF90aGlzLCAkZXZlbnQpXCI+XG4gICAgPGRpdiAqbmdJZj1cIiFjb2x1bW4uY2VsbFRlbXBsYXRlXCIgW3RleHRDb250ZW50XT1cIml0ZW1bY29sdW1uLnByb3BlcnR5XVwiPjwvZGl2PlxuICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJjb2x1bW4uY2VsbFRlbXBsYXRlXCIgW25nVGVtcGxhdGVPdXRsZXRdPVwiY29sdW1uLmNlbGxUZW1wbGF0ZVwiXG4gICAgICAgICBbbmdUZW1wbGF0ZU91dGxldENvbnRleHRdPVwie2NvbHVtbjogY29sdW1uLCByb3c6IF90aGlzLCBpdGVtOiBpdGVtfVwiPjwvbmctY29udGFpbmVyPlxuICA8L3RkPlxuPC90cj5cbjx0ciAqbmdJZj1cImRhdGFUYWJsZS5leHBhbmRhYmxlUm93c1wiIFtoaWRlXT1cIiFleHBhbmRlZFwiIGNsYXNzPVwicm93LWV4cGFuc2lvblwiPlxuICA8dGQgW2F0dHIuY29sc3Bhbl09XCJkYXRhVGFibGUuY29sdW1uQ291bnRcIj5cbiAgICA8bmctY29udGFpbmVyIFtuZ1RlbXBsYXRlT3V0bGV0XT1cImRhdGFUYWJsZS5leHBhbmRUZW1wbGF0ZVwiXG4gICAgICAgICAgICAgICAgICBbbmdUZW1wbGF0ZU91dGxldENvbnRleHRdPVwie3JvdzogX3RoaXMsIGl0ZW06IGl0ZW19XCI+PC9uZy1jb250YWluZXI+XG4gIDwvdGQ+XG48L3RyPlxuYCxcbiAgc3R5bGVzOiBbYC5zZWxlY3QtY29sdW1ue3RleHQtYWxpZ246Y2VudGVyfS5yb3ctZXhwYW5kLWJ1dHRvbntjdXJzb3I6cG9pbnRlcjt0ZXh0LWFsaWduOmNlbnRlcn0uY2xpY2thYmxle2N1cnNvcjpwb2ludGVyfWBdXG59KVxuZXhwb3J0IGNsYXNzIERhdGFUYWJsZVJvdzxUPiBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XG5cbiAgLy8gcm93IHNlbGVjdGlvbjpcbiAgcHJpdmF0ZSBfc2VsZWN0ZWQ6IGJvb2xlYW47XG4gIGV4cGFuZGVkOiBib29sZWFuO1xuXG4gIEBJbnB1dCgpXG4gIGl0ZW06IFQ7XG4gIEBJbnB1dCgpXG4gIGluZGV4OiBudW1iZXI7XG5cbiAgQE91dHB1dCgpXG4gIHNlbGVjdGVkQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIC8vIEZJWE1FIGlzIHRoZXJlIG5vIHRlbXBsYXRlIGtleXdvcmQgZm9yIHRoaXMgaW4gYW5ndWxhciAyP1xuICBwdWJsaWMgX3RoaXMgPSB0aGlzO1xuXG4gIGNvbnN0cnVjdG9yKEBJbmplY3QoZm9yd2FyZFJlZigoKSA9PiBEYXRhVGFibGUpKSBwdWJsaWMgZGF0YVRhYmxlOiBEYXRhVGFibGU8VD4pIHtcbiAgfVxuXG4gIGdldCBzZWxlY3RlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5fc2VsZWN0ZWQ7XG4gIH1cblxuICBzZXQgc2VsZWN0ZWQoc2VsZWN0ZWQpIHtcbiAgICB0aGlzLl9zZWxlY3RlZCA9IHNlbGVjdGVkO1xuICAgIHRoaXMuc2VsZWN0ZWRDaGFuZ2UuZW1pdChzZWxlY3RlZCk7XG4gIH1cblxuICAvLyBvdGhlcjpcbiAgZ2V0IGRpc3BsYXlJbmRleCgpIHtcbiAgICBpZiAodGhpcy5kYXRhVGFibGUucGFnaW5hdGlvbikge1xuICAgICAgcmV0dXJuIHRoaXMuZGF0YVRhYmxlLmRpc3BsYXlQYXJhbXMub2Zmc2V0ICsgdGhpcy5pbmRleCArIDE7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiB0aGlzLmluZGV4ICsgMTtcbiAgICB9XG4gIH1cblxuICBnZXRUb29sdGlwKCkge1xuICAgIGlmICh0aGlzLmRhdGFUYWJsZS5yb3dUb29sdGlwKSB7XG4gICAgICByZXR1cm4gdGhpcy5kYXRhVGFibGUucm93VG9vbHRpcCh0aGlzLml0ZW0sIHRoaXMsIHRoaXMuaW5kZXgpO1xuICAgIH1cbiAgICByZXR1cm4gJyc7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLnNlbGVjdGVkID0gZmFsc2U7XG4gIH1cbn1cbiJdfQ==